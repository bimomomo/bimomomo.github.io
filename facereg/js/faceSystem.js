async function face() {
	await loadmodel();

	$('#desc').html('detecting refimg')
	const labels = ['refimg'];
	
	const labeledFaceDescriptors = await Promise.all(labels.map(async label => {
		const f32a = [Float32Array.from([-0.14496465027332306,0.0875130221247673,0.0706120952963829,-0.08064176887273788,-0.037940479815006256,-0.026561100035905838,-0.01942436955869198,-0.14873634278774261,0.13053804636001587,-0.07622912526130676,0.29275333881378174,-0.055522605776786804,-0.22682225704193115,-0.16227522492408752,-0.030173318460583687,0.19542402029037476,-0.18386371433734894,-0.11343525350093842,-0.09699396789073944,-0.03775668516755104,0.050035376101732254,-0.07188443839550018,0.06727074831724167,0.056913260370492935,-0.10952376574277878,-0.36937302350997925,-0.07254977524280548,-0.15832799673080444,0.012235629372298717,-0.02565433830022812,-0.08688751608133316,0.033279888331890106,-0.22276870906352997,-0.09420516341924667,-0.01608072966337204,0.02258509024977684,-0.013869614340364933,-0.02172982320189476,0.20249530673027039,-0.06175024434924126,-0.22046560049057007,0.04657860845327377,0.07597966492176056,0.1901041716337204,0.21539485454559326,0.08132015913724899,0.004905391950160265,-0.06192070245742798,0.08752285689115524,-0.18714021146297455,0.09984961897134781,0.1052909791469574,0.12443694472312927,0.009020776487886906,0.09624309837818146,-0.1480468213558197,0.002494547050446272,0.12702183425426483,-0.16336612403392792,0.018570592626929283,0.04756946116685867,-0.10353738069534302,-0.04987157881259918,-0.07407770305871964,0.24818359315395355,0.13170142471790314,-0.12157192081212997,-0.1099243089556694,0.16937732696533203,-0.04760483652353287,0.013271818868815899,0.06391856074333191,-0.17360977828502655,-0.1777748018503189,-0.3034432828426361,0.09118078649044037,0.3487378656864166,0.1410556435585022,-0.2054297775030136,0.014044693671166897,-0.06113306060433388,0.016165172681212425,0.13311202824115753,0.09993090480566025,-0.017219461500644684,-0.043600838631391525,-0.0761139988899231,-0.010408912785351276,0.09195438027381897,-0.025873662903904915,-0.0267096646130085,0.2369852513074875,-0.06283611059188843,0.022481180727481842,-0.03302464634180069,0.012616992928087711,-0.11629540473222733,0.03646550700068474,-0.13802240788936615,-0.006252466235309839,0.06750139594078064,0.04413580894470215,0.012768731452524662,0.10408101975917816,-0.12332073599100113,-0.012341145426034927,-0.04512340947985649,0.03126149997115135,0.004928390495479107,-0.03248368576169014,-0.04328199848532677,-0.06773168593645096,0.05583057925105095,-0.2276850938796997,0.21720348298549652,0.159180149435997,-0.005595067515969276,0.0887627899646759,0.11775438487529755,0.012388976290822029,0.03754256293177605,-0.023718778043985367,-0.24300405383110046,-0.0035614718217402697,0.19030937552452087,-0.06394089013338089,0.11445944011211395,0.008313816972076893])];
		console.log(f32a); 
		return new faceapi.LabeledFaceDescriptors(label, f32a)
	}));
	
	await runAi(labeledFaceDescriptors);
}
async function loadmodel(){
	$('#desc').html('start loading model')
	const MODEL_URL = './models'

	await faceapi.loadSsdMobilenetv1Model(MODEL_URL)
	await faceapi.loadFaceLandmarkModel(MODEL_URL)
	await faceapi.loadFaceRecognitionModel(MODEL_URL)
	await faceapi.loadFaceExpressionModel(MODEL_URL)
	
	$('#desc').html('finish loading model')
}
async function runAi(m){
	$('#desc').html('start detecting face')
	const img = document.getElementById('originalImg')
	let faceDescriptions = await faceapi.detectAllFaces(img).withFaceLandmarks().withFaceDescriptors().withFaceExpressions()
	const threshold = 0.39
	const faceMatcher = new faceapi.FaceMatcher(m, threshold)
	if (faceDescriptions) {
		const bm = faceDescriptions.map(fd => faceMatcher.findBestMatch(fd.descriptor))
		if (bm.length>0) {
			if (bm[0]._label=='refimg') {
				console.log(bm)
				$('body').css('background-color','green')
			}else{
				$('body').css('background-color','red')
			}
		}
		$('#matchrate').html(bm.toString())
	}

	const canvas = $('#reflay').get(0)
	faceapi.matchDimensions(canvas, img)
	faceDescriptions = faceapi.resizeResults(faceDescriptions, img)
	faceapi.draw.drawDetections(canvas, faceDescriptions)
	faceapi.draw.drawFaceLandmarks(canvas, faceDescriptions)
	faceapi.draw.drawFaceExpressions(canvas, faceDescriptions)
	$('#desc').html('finish detecting face')

	await setTimeout(async () => await this.runAi(m),90)
}
